import operator
from typing import Any

from aiogram.types import Message, CallbackQuery

from aiogram_dialog import DialogManager, StartMode, ShowMode
from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.kbd import Group, Select, Back, Cancel
from aiogram_dialog.widgets.input import MessageInput

from src.tgbot.dialogs.progress.progress_observer import get_err_msg, build_download_keyboard
from src.tgbot.dialogs.back_msg import answer_back_msg

from src.tgbot.misc.states import DownloaderDialogSG, SubAlertDialogSG, RulesAgreementDialogSG, ProgressObserverDialogSG

from src.core.external.controllers.user_controller import UserController
from src.core.external.controllers.downloader_controller import DownloaderController

from src.core.domain.entities.download_request import ContentType
from src.core.domain.exceptions.req_handler import *
from src.core.domain.exceptions.downloader import *

from .content_stocks import ContentStock, get_stock_titles, get_content_stock


async def on_input_link(m: Message, widget: MessageInput, manager: DialogManager):
    downloader_controller: DownloaderController = manager.middleware_data['downloader_controller']
    user_id = manager.middleware_data['user_id']
    content_type = manager.dialog_data['selected_content_type']
    await manager.reset_stack()

    try:
        req_id = await downloader_controller.request_download(user_id, m, content_type)

        await manager.start(ProgressObserverDialogSG.main,
                            data={'req_id': req_id, 'req_msg': m},
                            mode=StartMode.NEW_STACK)
    except SubValidationException:
        await manager.start(SubAlertDialogSG.warn_text, show_mode=ShowMode.SEND)
    except DayLimitException as ex:
        await answer_back_msg(m, f'–ü—Ä–µ–≤—ã—à–µ–Ω –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é!\n'
                                 f'–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–æ: {ex.day_req_limit.day_limit} –∑–∞ –¥–µ–Ω—å.\n'
                                 f'–°–ª–µ–¥—É—é—â–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞: '
                                 f'{ex.day_req_limit.next_request_time.strftime("%d-%m-%Y %H:%M:%S")}')
    except ParallelLimitException as ex:
        await answer_back_msg(m, f'–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –Ω–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é!\n–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–æ: {ex.limit} –∑–∞ —Ä–∞–∑')
    except ContentDownloaderException as ex:
        await answer_back_msg(m, get_err_msg(to_fail_status(ex)))
    except SameReqException as ex:
        await answer_back_msg(m, f'–ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É. –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫ –æ—Ç '
                                 f'{ex.req.created_date.strftime("%d-%m-%Y %H:%M:%S")}',
                                 build_download_keyboard(ex.req))


async def on_stock_selected(callback: CallbackQuery, widget: Any, manager: DialogManager, stock_title: str):
    manager.dialog_data['selected_stock'] = get_content_stock(stock_title)
    await manager.switch_to(DownloaderDialogSG.content_type_select)


async def on_content_type_selected(callback: CallbackQuery, widget: Any, manager: DialogManager, type_value: str):
    manager.dialog_data['selected_content_type'] = ContentType(int(type_value))
    await manager.switch_to(DownloaderDialogSG.download_link_input)


async def stocks_getter(**kwargs):
    return {
        'stocks': get_stock_titles()
    }


async def content_types_getter(dialog_manager: DialogManager, **kwargs):
    stock: ContentStock = dialog_manager.dialog_data['selected_stock']

    return {
        'content_types': stock.content_type_titles
    }


async def stock_link_getter(dialog_manager: DialogManager, **kwargs):
    stock: ContentStock = dialog_manager.dialog_data['selected_stock']

    return {
        'stock_link': stock.html_link
    }


downloader_dialog = Dialog(
    Window(

        Const('''–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è YOLICO –±–æ—Ç–æ–º

–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤:

 ‚¨õ  <strong>–ó–∞ –æ–¥–∏–Ω —Ä–∞–∑ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å;</strong>

 ‚¨õ  <strong>–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫–∏, –±–µ–∑ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ —Ç–µ–∫—Å—Ç–∞;</strong>

 ‚¨õ  <strong>–õ–∏–º–∏—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –≤ YOLICO –±–æ—Ç–µ –º–µ–¥–∏–∞–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –Ω–µ –±–æ–ª–µ–µ 5 —Å—Å—ã–ª–æ–∫ –≤ —Å—É—Ç–∫–∏;</strong>

–í—ã–±–µ—Ä–∏—Ç–µ —Å–∞–π—Ç –∏–∑ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ üëá'''),

        Group(
            Select(
                Format('{item[0]}'),
                id='stock_list',
                item_id_getter=operator.itemgetter(0),
                items='stocks',
                on_click=on_stock_selected
            ),
            width=2
        ),

        Cancel(Const('‚óÄ –ù–∞–∑–∞–¥')),
        state=DownloaderDialogSG.main,
        getter=stocks_getter
    ),
    Window(
        Const('–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã'),
        Group(
            Select(
                Format('{item[0]}'),
                id='content_type_list',
                item_id_getter=operator.itemgetter(1),
                items='content_types',
                on_click=on_content_type_selected
            ),
            width=2
        ),
        Back(Const('‚óÄ –ù–∞–∑–∞–¥')),
        state=DownloaderDialogSG.content_type_select,
        getter=content_types_getter
    ),
    Window(
        Format('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª —Å {stock_link}'),
        Back(Const('‚óÄ –ù–∞–∑–∞–¥')),
        MessageInput(on_input_link),
        state=DownloaderDialogSG.download_link_input,
        getter=stock_link_getter
    )
)
